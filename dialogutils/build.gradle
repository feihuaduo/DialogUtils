plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 34 // 更新为最新版本以确保兼容性

    defaultConfig {
        minSdkVersion 21 // 提高 minSdkVersion 以避免潜在的兼容性问题
        targetSdkVersion 21 // 更新为最新版本以确保兼容性
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

//    publishing {
//        singleVariant("release") {
//            withSourcesJar()
//            withJavadocJar()
//        }
//    }

    namespace 'com.feihua.dialogutils'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


dependencies {
    api 'androidx.appcompat:appcompat:1.7.0'
    api 'com.google.android.material:material:1.12.0'
    api "androidx.cardview:cardview:1.0.0"
}

// Configure publishing using the new API
publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.feihua'
            artifactId = 'dialogutils'
            version = '1.8.9.31'

            afterEvaluate {
                from components.findByName("release")
                // 明确添加 AAR 文件作为工件
                artifact("$buildDir/outputs/aar/${artifactId}-release.aar")
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.api.allDependencies.each { dep ->
                    if (!dep.name.startsWith("unspecified")) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dep.group)
                        dependencyNode.appendNode('artifactId', dep.name)
                        dependencyNode.appendNode('version', dep.version)
                    }
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

// 显式声明依赖关系
tasks.named('publishReleasePublicationToMavenLocal').configure {
    dependsOn tasks.named('bundleReleaseAar')
}
